{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1kose\\\\Desktop\\\\School\\\\todo\\\\src\\\\components\\\\TaskItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Input, List, Checkbox } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task,\n  handleDeleteTask,\n  handleEditTodo,\n  handleToggleTask\n}) => {\n  _s();\n  const [edit, setEdit] = useState();\n  const handleTaskChange = e => {\n    setEdit(e.target.value);\n  };\n  const handleSubmitEdit = () => {\n    if (!task.isCompleted) {\n      let newText = task.text;\n      console.log(newText);\n      setEdit(newText);\n      console.log(edit);\n      handleEditTodo(task.id, edit);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(List.Item, {\n    actions: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: task.isCompleted,\n      onChange: () => {\n        if (!task.isEdit) {\n          handleToggleTask(task.id);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmitEdit,\n      style: {\n        color: '#727077',\n        backgroundColor: 'rgba(0, 0, 0, 0.05)',\n        borderColor: 'rgba(0, 0, 0, 0.3)'\n      },\n      children: !task.isCompleted && task.isEdit ? 'Save' : 'Edit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      danger: true,\n      onClick: () => handleDeleteTask(task.id),\n      style: {\n        backgroundColor: 'rgba(250, 0, 0, 0.2)',\n        borderColor: 'rgba(250, 0, 0, 0.3)'\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)],\n    style: {\n      textAlign: 'left',\n      wordBreak: 'break-word',\n      marginBottom: '15px',\n      textDecoration: task.isCompleted ? 'line-through' : 'none',\n      color: task.isCompleted ? '#727077' : '#04202C',\n      padding: '10px',\n      borderRadius: '5px',\n      backgroundColor: task.isCompleted ? 'rgba(0, 220, 0, 0.15)' : 'rgba(233, 151, 135, 0.5)',\n      fontSize: '16px'\n    },\n    children: task.isEdit && !task.isCompleted ? /*#__PURE__*/_jsxDEV(Input.TextArea, {\n      autoSize: true,\n      value: edit,\n      onChange: handleTaskChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : task.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"3Yq1WQbjC3IXCV3FeEJitA1aS+A=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","Button","Input","List","Checkbox","jsxDEV","_jsxDEV","TaskItem","task","handleDeleteTask","handleEditTodo","handleToggleTask","_s","edit","setEdit","handleTaskChange","e","target","value","handleSubmitEdit","isCompleted","newText","text","console","log","id","Item","actions","checked","onChange","isEdit","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","backgroundColor","borderColor","children","danger","textAlign","wordBreak","marginBottom","textDecoration","padding","borderRadius","fontSize","TextArea","autoSize","_c","$RefreshReg$"],"sources":["C:/Users/1kose/Desktop/School/todo/src/components/TaskItem.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Input, List, Checkbox } from 'antd';\r\n\r\nconst TaskItem = ({\r\n  task,\r\n  handleDeleteTask,\r\n  handleEditTodo,\r\n  handleToggleTask,\r\n}) => {\r\n\r\n  const [edit, setEdit] = useState();\r\n\r\n  const handleTaskChange = (e) => {\r\n    setEdit(e.target.value);\r\n  };\r\n\r\n  const handleSubmitEdit = () => {\r\n    if (!task.isCompleted) {\r\n      let newText = task.text;\r\n      console.log(newText);\r\n      setEdit(newText);\r\n      console.log(edit);\r\n      handleEditTodo(task.id, edit);\r\n    } \r\n  };\r\n\r\n  return (\r\n    <List.Item\r\n      actions={[\r\n        <Checkbox\r\n          checked={task.isCompleted}\r\n          onChange={() => {\r\n            if (!task.isEdit) {\r\n              handleToggleTask(task.id);\r\n            }\r\n          }}\r\n        />,\r\n        <Button\r\n          onClick={handleSubmitEdit}\r\n          style={{\r\n            color: '#727077',\r\n            backgroundColor: 'rgba(0, 0, 0, 0.05)',\r\n            borderColor: 'rgba(0, 0, 0, 0.3)',\r\n          }}\r\n        >\r\n          {!task.isCompleted && task.isEdit ? 'Save' : 'Edit'}\r\n        </Button>,\r\n        <Button\r\n          danger\r\n          onClick={() => handleDeleteTask(task.id)}\r\n          style={{\r\n            backgroundColor: 'rgba(250, 0, 0, 0.2)',\r\n            borderColor: 'rgba(250, 0, 0, 0.3)',\r\n          }}\r\n        >\r\n          Delete\r\n        </Button>,\r\n      ]}\r\n      style={{\r\n        textAlign: 'left',\r\n        wordBreak: 'break-word',\r\n        marginBottom: '15px',\r\n        textDecoration: task.isCompleted ? 'line-through' : 'none',\r\n        color: task.isCompleted ? '#727077' : '#04202C',\r\n        padding: '10px',\r\n        borderRadius: '5px',\r\n        backgroundColor: task.isCompleted\r\n          ? 'rgba(0, 220, 0, 0.15)'\r\n          : 'rgba(233, 151, 135, 0.5)',\r\n        fontSize: '16px',\r\n      }}\r\n    >\r\n      {task.isEdit && !task.isCompleted ? (\r\n        <Input.TextArea autoSize={true} value={edit} onChange={handleTaskChange}></Input.TextArea>\r\n      ) : (\r\n        task.text\r\n      )}\r\n    </List.Item>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,QAAQ,GAAGA,CAAC;EAChBC,IAAI;EACJC,gBAAgB;EAChBC,cAAc;EACdC;AACF,CAAC,KAAK;EAAAC,EAAA;EAEJ,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC;EAElC,MAAMe,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAACX,IAAI,CAACY,WAAW,EAAE;MACrB,IAAIC,OAAO,GAAGb,IAAI,CAACc,IAAI;MACvBC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;MACpBP,OAAO,CAACO,OAAO,CAAC;MAChBE,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;MACjBH,cAAc,CAACF,IAAI,CAACiB,EAAE,EAAEZ,IAAI,CAAC;IAC/B;EACF,CAAC;EAED,oBACEP,OAAA,CAACH,IAAI,CAACuB,IAAI;IACRC,OAAO,EAAE,cACPrB,OAAA,CAACF,QAAQ;MACPwB,OAAO,EAAEpB,IAAI,CAACY,WAAY;MAC1BS,QAAQ,EAAEA,CAAA,KAAM;QACd,IAAI,CAACrB,IAAI,CAACsB,MAAM,EAAE;UAChBnB,gBAAgB,CAACH,IAAI,CAACiB,EAAE,CAAC;QAC3B;MACF;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACF5B,OAAA,CAACL,MAAM;MACLkC,OAAO,EAAEhB,gBAAiB;MAC1BiB,KAAK,EAAE;QACLC,KAAK,EAAE,SAAS;QAChBC,eAAe,EAAE,qBAAqB;QACtCC,WAAW,EAAE;MACf,CAAE;MAAAC,QAAA,EAED,CAAChC,IAAI,CAACY,WAAW,IAAIZ,IAAI,CAACsB,MAAM,GAAG,MAAM,GAAG;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACT5B,OAAA,CAACL,MAAM;MACLwC,MAAM;MACNN,OAAO,EAAEA,CAAA,KAAM1B,gBAAgB,CAACD,IAAI,CAACiB,EAAE,CAAE;MACzCW,KAAK,EAAE;QACLE,eAAe,EAAE,sBAAsB;QACvCC,WAAW,EAAE;MACf,CAAE;MAAAC,QAAA,EACH;IAED;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,CACT;IACFE,KAAK,EAAE;MACLM,SAAS,EAAE,MAAM;MACjBC,SAAS,EAAE,YAAY;MACvBC,YAAY,EAAE,MAAM;MACpBC,cAAc,EAAErC,IAAI,CAACY,WAAW,GAAG,cAAc,GAAG,MAAM;MAC1DiB,KAAK,EAAE7B,IAAI,CAACY,WAAW,GAAG,SAAS,GAAG,SAAS;MAC/C0B,OAAO,EAAE,MAAM;MACfC,YAAY,EAAE,KAAK;MACnBT,eAAe,EAAE9B,IAAI,CAACY,WAAW,GAC7B,uBAAuB,GACvB,0BAA0B;MAC9B4B,QAAQ,EAAE;IACZ,CAAE;IAAAR,QAAA,EAEDhC,IAAI,CAACsB,MAAM,IAAI,CAACtB,IAAI,CAACY,WAAW,gBAC/Bd,OAAA,CAACJ,KAAK,CAAC+C,QAAQ;MAACC,QAAQ,EAAE,IAAK;MAAChC,KAAK,EAAEL,IAAK;MAACgB,QAAQ,EAAEd;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC,GAE1F1B,IAAI,CAACc;EACN;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAACtB,EAAA,CA5EIL,QAAQ;AAAA4C,EAAA,GAAR5C,QAAQ;AA8Ed,eAAeA,QAAQ;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}